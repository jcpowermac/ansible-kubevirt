---
- name: Add network packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - NetworkManager
    - NetworkManager-glib
    - nm-connection-editor.x86_64

- name: Add Bridge Module
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - bridge
    - br_netfilter

- name: sysctl
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
  with_items:
    - { name: "net.bridge.bridge-nf-call-iptables", value: 1 }
    - { name: "net.bridge.bridge-nf-call-ip6tables", value: 1 }
    - { name: "net.ipv4.ip_forward", value: 1 }

- name: Stop network; Start NetworkManager
  shell: "systemctl stop network && systemctl start NetworkManager && sleep 10 && ifup eth0"
  async: 60
  poll: 10

- name: Enable Network
  systemd:
    name: network
    enabled: yes
    state: stopped

- name: Disable NetworkManager
  systemd:
    name: NetworkManager
    enabled: no
    state: started

- name: network config
  nmcli:
    type: ethernet
    conn_name: "System eth0"
    ifname: eth0
    ip4: "{{ ipaddr }}/{{ mask }}"
    gw4: "{{ gateway }}"
    dns4: "{{ dns4 }}"
    state: present
  register: network
  async: 60
  poll: 0

- name: dhcp to none
  lineinfile:
    path: /etc/sysconfig/network-scripts/ifcfg-eth0
    regexp: '^BOOTPROTO'
    line: 'BOOTPROTO=none'

- name: restart server
  shell: sleep 2 && /sbin/shutdown -r now "System reboot"
  async: 1
  poll: 0
  when: network | changed

- name: Set Facts - Global
  set_fact:
    ansible_host: "{{ ipaddr }}"
    ansible_port: 22

- name: Wait for connection to be available
  local_action:
    module: wait_for
    host: "{{ ansible_host }}"
    state: started
    port: "{{ ansible_port }}"
    delay: 30
    connect_timeout: 15
    timeout: 300

